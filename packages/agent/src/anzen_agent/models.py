"""
Anzen AI Agent Models

Pydantic models for agent requests and responses.
"""

from typing import Any, Dict, List, Optional

from pydantic import BaseModel


class AgentRequest(BaseModel):
    """Request model for agent interactions."""

    prompt: str
    user_id: Optional[str] = None
    session_id: Optional[str] = None
    context: Dict[str, Any] = {}


class TaskStep(BaseModel):
    """Individual task step in the plan."""

    step: int
    action: str
    description: str
    status: str = "pending"  # pending, running, completed, failed
    result: Optional[str] = None


class TaskPlan(BaseModel):
    """Task plan generated by the agent."""

    steps: List[TaskStep]
    estimated_time: int  # seconds
    complexity: str  # low, medium, high
    requires_approval: bool = False


class AgentResponse(BaseModel):
    """Response model for agent interactions."""

    response: str
    plan: Optional[TaskPlan] = None
    trace_id: Optional[str] = None
    safety_checks: Dict[str, Any] = {}
    metadata: Dict[str, Any] = {}
