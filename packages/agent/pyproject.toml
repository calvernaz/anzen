[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "anzen-agent"
version = "0.1.0"
description = "Anzen AI Agent - Plan â†’ Execute workflow with safety guardrails integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Anzen Team", email = "team@anzen.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "httpx>=0.25.0",
    "openai>=1.3.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "wikipedia>=1.4.0",
    "requests>=2.31.0",
    "structlog>=23.2.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",

]

[tool.uv.sources]
anzen-gateway = { workspace = true }

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",
    "pytest-mock>=3.12.0",
    "coverage>=7.3.0",
]

[project.scripts]
anzen-agent = "anzen_agent.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/anzen_agent"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
]

[dependency-groups]
dev = [
    "types-requests>=2.32.4.20250809",
]
